var events = {}; function on(_0x290912, _0x28d525, _0x224df5) { var _0x4021e8 = [_0x28d525, _0x224df5]; var _0x5702fd = events[_0x290912]; if (Array['isArray'](_0x5702fd)) { _0x5702fd['push'](_0x4021e8); } else { events[_0x290912] = [_0x4021e8]; } } function remove(_0x1271ae) { var _0x5b7aa9 = { 'pHBGI': function (_0x505822, _0x2d7d61) { return _0x505822 != _0x2d7d61; } }; for (var _0x11189e in events) { var _0x41a3b5 = events[_0x11189e]; if (Array['isArray'](_0x41a3b5)) { events[_0x11189e] = _0x41a3b5['filter'](_0x5747a9 => { return _0x5b7aa9['pHBGI'](_0x5747a9[0x0], _0x1271ae); }); } } } function emit(_0x2a9fe6) { var _0x1057a = events[_0x2a9fe6]; var _0xc24386 = Array['from'](arguments); _0xc24386['splice'](0x0, 0x1); if (Array['isArray'](_0x1057a)) { _0x1057a['map'](_0x58316b => { var _0x3d167c = _0x58316b[0x0]; var _0x33151e = _0x58316b[0x1]; try { _0x33151e['apply'](_0x3d167c, _0xc24386); } catch (_0x572856) { console['log'](_0x572856); } }); } } exports['on'] = on; exports['remove'] = remove; exports['emit'] = emit;